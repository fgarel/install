#!/bin/bash
#
# tileman-update
#
# Get osm changes and update PostGIS database
# osmosis configuration should be in $WORKDIR
#
# Licensed in GPLv3
# Copyright 2013-2014, Hiroshi Miura <miurahr@osmf.jp>
#
# ----------------------------
# ChnageLog
#
# 2014-05-26 Support -i option to specify config file
# 2013-11-03 check strictly command return values
             change osmosis directories
# 2013-07-02 change command name to tileman-update
# ----------------------------
#
NAME=tileman-update
CONF=/etc/tileman.conf

while getopts "bchi:u" opts; do
    case $opts in
    c)
    CLEAN_FLAG=yes
    ;;
    b)
    CLEAN_OUTOFBB_FLAG=yes
    ;;
    h)
    #show help and exit
    echo "$0: get osm change file and update postgis db"
    echo " "
    echo "It takes addtional options as follows: "
    echo "'-b': clwan-up out-of-bounding-box ways"
    echo "'-c': compact size of PostGIS."
    echo "'-h': show this message"
    echo "'-i': configuration file"
    echo "'-u': launch tirex_batch to refresh expired tile"
    exit 0
    ;;
    i)
    CONF="$OPTARG"
    ;;
    u)
    TILE_UPDATE_FLAG=yes
    ;;
    esac
done
shift $((OPTIND - 1))

# Read configuration variable file
if [ ! -r "${CONF}" ]; then
    echo "Configuration file is not found: ${CONF}"
    exit 1
fi
. "${CONF}"

WORKDIR=${WORKDIR_OSM:=/var/lib/osmosis}
DBUSER=${DBUSER:=osm}
DBNAME=${DBNAME:=gis}
OSMOSIS_BIN=${OSMOSIS_BIN:=/usr/bin/osmosis}
OSM2PGSQL_BIN=${OSM2PGSQL_BIN:=/usr/bin/osm2pgsql}
PSQL_BIN=${PSQL_BIN:=/usr/bin/psql}
SLIMDBDROP=${SLIMDBDROP:=no}

TIREX_BATCH_BIN=${TIREX_BATCH_BIN:=/usr/bin/tirex-batch}
TILEDIR=${TILEDIR:=/var/lib/tirex/tiles}
MAPNAME=${MAPNAME:=custom}

EXPIRE_ZOOM=${EXPIRE_ZOOM:=15}
MINZOOM=${MINZOOM:=12}
MAXZOOM=${MAXZOOM:=19}
FILTER=${FILTER:=exists}

UPDATE_DIR=$WORKDIR/updates/`date +%y%m%d`
OSC_PIPE=$UPDATE_DIR/changes_osc.$$
EXPIRE_FILE=$UPDATE_OSM/expire.list.$$
UPDATE_LOG=$UPDATE_DIR/update.log.$$

OSMOSIS_OPT="--read-replication-interval workingDirectory=$WORKDIR --simplify-change --write-xml-change"
DB_OPT="-U $DBUSER -d $DBNAME"
OSM2PGSQL_OPT="--append $DB_OPT -a -e${EXPIRE_ZOOM}"

if [ "$SLIMDBDROP" = "NO" -o "$SLIMDBDROP" = "no" -o "$SLIMDBDROP" = "false" -o "$SLIMDBDROP" = "FALSE" ]; then
  if [ "$USESLIMDB" = "YES" -o "$USESLIMDB" = "yes" -o "$USESLIMDB" = "true" -o "$USESLIMDB" = "TRUE" ]; then
    OSM2PGSQL_OPT +=" --slim "
  fi
fi

function cleanup_bbox () {
    $PSQL_BIN $DB_OPT -w << _EOL_
      DELETE FROM planet_osm_ways AS w WHERE 0 = (SELECT COUNT(1) FROM planet_osm_nodes AS n WHERE n.id = ANY(w.nodes));
      DELETE FROM planet_osm_rels AS r WHERE 
         0=(SELECT COUNT(1) FROM planet_osm_nodes AS n WHERE n.id = ANY(r.parts)) 
         AND
         0=(SELECT COUNT(1) FROM planet_osm_ways AS w WHERE w.id = ANY(r.parts));
      REINDEX TABLE planet_osm_ways;
      REINDEX TABLE planet_osm_rels;
      VACUUM;
_EOL_
}

function check_exec () {
  if [ ! -x $OSMOSIS_BIN ] ; then
     echo "Error: $OSMOSIS_BIN doesn't exist."
     echo
     exit 1
  elif [ ! -x $PSQL_BIN ] ; then
     echo "Error: $PSQL_BIN doesn't exist."
     echo
     exit 1
  elif [ ! -x $OSM2PGSQL_BIN ] ; then
     echo "Error: $OSM2PGSQL_BIN doesn't exist."
     echo
     exit 1
  elif [ ! -x $TIREX_BATCH_BIN ] ; then
     echo "Error: $TIREX_BATCH_BIN doesn't exist."
     echo
     exit 1
  fi
}

check_exec
if [ "${TILE_UPDATE_FLAG}" = "yes" ]; then
  mkdir -p $UPDATE_DIR
  $OSMOSIS_BIN $OSMOSIS_OPT $OSC_PIPE |tee $UPDATE_LOG
  if [ $? = 0 ]; then
    $OSM2PGSQL_BIN $OSM2PGSQL_OPT -o $EXPIRE_FILE $OSC_PIPE |tee -a $UPDATE_LOG
    if [ $? = 0 ]; then
      cat $EXPIRE_FILE | tileman-expconv $MAPNAME $MAXZOOM | $TIREX_BATCH_BIN -f $FILTER -p 10 |tee -a $UPDATE_LOG
      cat $EXPIRE_FILE | tileman-expconv $MAPNAME $EXPIRE_ZOOM $MINZOOM | $TIREX_BATCH_BIN -f $FILTER -p 15 |tee -a $UPDATE_LOG
    else
      echo "error occured when " $OSM2PGSQL $OSM2PGSQL_OPT
    fi
  else
    echo "error occured when " $OSMOSIS_BIN $OSMOSIS_OPT
  fi
else
  mkdir -p $UPDATE_DIR
  $OSMOSIS_BIN $OSMOSIS_OPT $OSC_PIPE | tee $UPDATE_LOG
  if [ $? = 0 ]; then
    $OSM2PGSQL_BIN $OSM2PGSQL_OPT -o $EXPIRE_FILE $OSC_PIPE | tee -a $UPDATE_LOG
  else
    echo "error occured when " $OSMOSIS_BIN $OSMOSIS_OPT
  fi
fi

if [ "${CLEAN_OUTOFBB_FLAG}" = "yes" ]; then
  cleanup_bbox
fi

exit 0
